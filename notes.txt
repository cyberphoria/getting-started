# check docker processes
docker ps


# remove process
docker rm -f <id>


# run ubuntu image
docker run -d ubuntu bash -c "shuf -i 1-10000 -n 1 -o /data.txt && tail -f /dev/null"

# create volume
docker volume create todo-db

# start container with persistent DB
docker run -dp 3000:3000 -v todo-db:/etc/todos getting-started

# see where data stored
docker volume inspect todo-db

# Start a dev-mode container (Windows) (in ./apps/)
docker run -dp 3000:3000 `
     -w /app -v "$(pwd):/app" `
     node:12-alpine `
     sh -c "yarn install && yarn run dev"

# check docker logs
     docker logs -f <container-id>

# build container
docker build -t getting-started .

# network
# https://docs.docker.com/get-started/07_multi_container/

# create a network
docker network create todo-app

# start a MySQL container and attach it to the network.
PS> docker run -d `
     --network todo-app --network-alias mysql `
     -v todo-mysql-data:/var/lib/mysql `
     -e MYSQL_ROOT_PASSWORD=secret `
     -e MYSQL_DATABASE=todos `
     mysql:5.7


# connect to the database and verify it connects
docker exec -it <mysql-container-id> mysql -u root -p

# connect to mysql
docker run -it --network todo-app nicolaka/netshoot

# change environment variables
mysql> ALTER USER 'root' IDENTIFIED WITH mysql_native_password BY 'secret';
mysql> flush privileges;

# docker compose
# tear down application
# include --volumes flag to also remove named volumes
docker compose down

# scan for vulnerabilities using Snyk
# https://docs.docker.com/get-started/09_image_best/
docker scan getting-started
