services:
# docker compose automatically creates network specifically for application stack
  # before:
  # docker run -dp 3000:3000 \
  #   -w /app -v "$(pwd):/app" \
  #   --network todo-app \
  #   -e MYSQL_HOST=mysql \
  #   -e MYSQL_USER=root \
  #   -e MYSQL_PASSWORD=secret \
  #   -e MYSQL_DB=todos \
  #   node:18-alpine \
  #   sh -c "yarn install && yarn run dev"

  # after:
  app:
    # service for the container
    # this is also a network alias
    image: node:18-alpine
    command: sh -c "yarn install && yarn run dev"
    # define ports for service
    # there is also a long syntax with more parameters (protocol, mode, etc)
    ports:
      - 3000:3000
    working_dir: /app
    volumes:
      - ./:/app
    environment:
      MYSQL_HOST: mysql
      MYSQL_USER: root
      MYSQL_PASSWORD: secret
      MYSQL_DB: todos
  
  # before:
  # docker run -d \
  # --network todo-app --network-alias mysql \
  # -v todo-mysql-data:/var/lib/mysql \
  # -e MYSQL_ROOT_PASSWORD=secret \
  # -e MYSQL_DATABASE=todos \
  # mysql:8.0
  mysql:
    image: mysql:8.0
    # named volume not created automatically like with docker run
    # must be defined and the mountpoint specified
    volumes:
      - todo-mysql-data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: todos

volumes:
  todo-mysql-data:
